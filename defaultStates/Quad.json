{"shaders":{"vertex":{"source":"#version 300 es\n\n//vertex coordinates in world space for the render quad\nin vec3 vertex_worldSpace;\n//texture coordinate for this vertex and the render quad\nin vec2 textureCoordinate_input;\n\n//texture coordinate needs to be passed on to the R2T fragment shader\nout vec2 varyingTextureCoordinate;\n\n//main program for each vertex of the render quad\nvoid main() {\n  gl_Position = vec4(vertex_worldSpace, 1.0);\n  varyingTextureCoordinate = textureCoordinate_input;\n}"},"fragment":{"source":"#version 300 es\n\nprecision highp float;\n\n//a texture sampling unit, which is bound to the render quad texture buffer\nuniform sampler2D textureRendered;\n\n//texture coordinates coming from the vertex shader, interpolated through the rasterizer\nin vec2 varyingTextureCoordinate;\nout vec4 fragColor;\n\n//main program for each fragment of the render quad\nvoid main() {\n  fragColor = texture(textureRendered, varyingTextureCoordinate.st);\n}"}},"uniforms":{"value":{"textureRendered":{"attachment":""}}}}